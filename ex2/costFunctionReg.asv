function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta



pred = sigmoid(X * theta);
case1 = log(pred);
case0 = log(ones(length(pred), 1) - pred);
regTerm = (lambda / (2 * m)) * sum([theta(1); (theta(2:size(theta))^2)]);

J = (1/m) * ((((-1) * y)' * case1) - (ones(length(y), 1) - y)'...
    * case0) + regTerm;
grad = (1/m) * X' * (pred - y) + (zeros(size(theta), 1) +);

% =============================================================

end
